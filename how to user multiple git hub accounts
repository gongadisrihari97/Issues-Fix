Step 1: Now generate an SSH key for second accounts
	$ ssh-keygen -t rsa -C "Github-email-address"
	{Home Directory}/.ssh/id_rsa -> {Home Directory}/.ssh/id_rsa_example (Any file name)
	Now enter the passphrase and It’s done and you can get the key at
	{Home Directory}/.ssh/id_rsa_example (File name you entered)
Step 2: Now It time to attach the key with your second Github account.
	Copy your SSH key using below command
	$ pbcopy < ~/.ssh/id_rsa_example.pub
	and follow this Github guide to add SSH key on your account -> https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/
	Now you have set up the SSH key, Now It’s time tell SSH about it
	Next, because we saved our key with a unique name, we need to tell SSH about it. Within the Terminal, type: ssh-add ~/.ssh/id_rsa_example. If successful, you'll see a response of
Step 3: Setup Github Host
	Everything is done, Now we need to configure when we want to push code on our first account and when we want to push on our second account. let’s create a config file and open
	$ touch ~/.ssh/config
	You can open from any editor, I used the sublime text editor
	$ subl config
	you will get default config settings there of you first Github account
	#therajanmaurya account
		Host github.com-therajanmaurya
	    	HostName github.com
		User git
		IdentityFile ~/.ssh/id_rsa
	Now add the config for second Github account
	#therajanmaurya account
		Host github.com-therajanmaurya
    		HostName github.com
    		User git
		IdentityFile ~/.ssh/id_rsa
	#example account
	Host github-example
		HostName github.com
    		User git
    		IdentityFile ~/.ssh/id_rsa_example
	write any Hostname carefully and remember, it will be your identifier that will tell you on which you want to push and don’t forget to write correct IdentityFile name that you created earlier.
Step 4: Push code on a second account with any Github user.
	Now we are done with SSH setup on the local machine. It’s time to push the code on Github.
	Go to the working directory of your project that you want to push on second Github account and initialize the Git
	$ git init
	It’s time to add remote of the second Github account project
	$ git remote add origin git@github-example:example/Test.git
	Be careful with the Host, this is the default host.	
	git@github.com 
	you have to replace “github.com” with the Hostname that you set up earlier in the config file and now it will look like this
	git@github-example
Step 5: Push code with a different user.
		Now you can push your code with three different manner
		Push code with already present Github user.
		Push code with the second user but with first Github user
		Push code with second Github user that you set up now.
		Now Let’s start one by one and push code on Github
	# Push code with already present Github user.
		Lol, you don’t need to do anything for this, simply add and commit your changes like this
		$ git add .
		$ git commit -m "commit message"
	# Push code with second Github user that you set up earlier.
		If you want to commit with the second user and don’t want to link with any user then you have to set up user email to the specific project
		$ git config user.email "email@example.com"
		and Confirm that you have set the email address correctly in Git:
		$ git config user.email
			email@example.com
		Now remaining things are the same as you do
		$ git add .
		$ git commit -m "anything"


